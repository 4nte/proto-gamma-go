// Code generated by protoc-gen-go. DO NOT EDIT.
// source: gamma/c.proto

package proto_gamma_go

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GammaTest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GammaTest) Reset()         { *m = GammaTest{} }
func (m *GammaTest) String() string { return proto.CompactTextString(m) }
func (*GammaTest) ProtoMessage()    {}
func (*GammaTest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7963f92b9f04be1b, []int{0}
}

func (m *GammaTest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GammaTest.Unmarshal(m, b)
}
func (m *GammaTest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GammaTest.Marshal(b, m, deterministic)
}
func (m *GammaTest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GammaTest.Merge(m, src)
}
func (m *GammaTest) XXX_Size() int {
	return xxx_messageInfo_GammaTest.Size(m)
}
func (m *GammaTest) XXX_DiscardUnknown() {
	xxx_messageInfo_GammaTest.DiscardUnknown(m)
}

var xxx_messageInfo_GammaTest proto.InternalMessageInfo

func init() {
	proto.RegisterType((*GammaTest)(nil), "gamma.GammaTest")
}

func init() { proto.RegisterFile("gamma/c.proto", fileDescriptor_7963f92b9f04be1b) }

var fileDescriptor_7963f92b9f04be1b = []byte{
	// 86 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4d, 0x4f, 0xcc, 0xcd,
	0x4d, 0xd4, 0x4f, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0x73, 0x95, 0xb8, 0xb9,
	0x38, 0xdd, 0x41, 0x8c, 0x90, 0xd4, 0xe2, 0x12, 0x27, 0x85, 0x28, 0xb9, 0xf4, 0xcc, 0x92, 0x8c,
	0xd2, 0x24, 0xbd, 0xe4, 0xfc, 0x5c, 0x7d, 0x93, 0xbc, 0x92, 0x54, 0x7d, 0xb0, 0x62, 0x5d, 0xb0,
	0x5a, 0xdd, 0xf4, 0xfc, 0x24, 0x36, 0x30, 0xdf, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0x9a, 0x22,
	0xfe, 0xa8, 0x4d, 0x00, 0x00, 0x00,
}
